package:
  name: cycler
  version: {{ environ['GIT_DESCRIBE_TAG'] }}.post{{ environ['GIT_DESCRIBE_NUMBER'] }}


source:
  git_url: ../

#  patches:
   # List any patch files here
   # - fix.patch

build:
  string: {{ environ.get('GIT_BUILD_STR', '') }}_py{{ py }}
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cycler = cycler:main
    #
    # Would create an entry point called cycler that calls cycler.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - cycler

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/matplotlib/cycler
  license: BSD
  summary: 'Composable style cycles'

# See
# https://conda.io/docs/building/build.html for
# more information about meta.yaml
