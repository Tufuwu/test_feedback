name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7, 3.6]
        env:
          - DJANGO_VERSION: "Django>=3.0,<3.1"
            RUN_WEB_TESTS: "true"
            BROWSER_TAG: "chrome_latest"
            DEPLOY: "true"
            USE_CUSTOM_MODEL: "true"
          - DJANGO_VERSION: "Django>=3.0,<3.1"
            RUN_WEB_TESTS: "true"
            BROWSER_TAG: "chrome_latest"
            USE_CUSTOM_MODEL: "false"
          - DJANGO_VERSION: "Django>=2.2,<2.3"
            RUN_WEB_TESTS: "false"
            USE_CUSTOM_MODEL: "true"
          - DJANGO_VERSION: "Django>=2.2,<2.3"
            RUN_WEB_TESTS: "false"
            USE_CUSTOM_MODEL: "false"
      exclude:
        - python-version: 3.8
          env: {DJANGO_VERSION: "Django>=3.0,<3.1", RUN_WEB_TESTS: "false", USE_CUSTOM_MODEL: "true"}
        - python-version: 3.8
          env: {DJANGO_VERSION: "Django>=3.0,<3.1", RUN_WEB_TESTS: "false", USE_CUSTOM_MODEL: "false"}
        - python-version: 3.7
          env: {DJANGO_VERSION: "Django>=3.0,<3.1", RUN_WEB_TESTS: "true", BROWSER_TAG: "chrome_latest", DEPLOY: "true", USE_CUSTOM_MODEL: "true"}
        - python-version: 3.7
          env: {DJANGO_VERSION: "Django>=3.0,<3.1", RUN_WEB_TESTS: "true", BROWSER_TAG: "chrome_latest", USE_CUSTOM_MODEL: "false"}
        - python-version: 3.6
          env: {DJANGO_VERSION: "Django>=3.0,<3.1", RUN_WEB_TESTS: "true", BROWSER_TAG: "chrome_latest", DEPLOY: "true", USE_CUSTOM_MODEL: "true"}
        - python-version: 3.6
          env: {DJANGO_VERSION: "Django>=3.0,<3.1", RUN_WEB_TESTS: "true", BROWSER_TAG: "chrome_latest", USE_CUSTOM_MODEL: "false"}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install pip -U
        pip install codecov
        grep -v "^django==" requirements.txt > /tmp/reqs.txt
        pip install -r /tmp/reqs.txt
        pip install "${{ matrix.env.DJANGO_VERSION }}" -U
    - name: Run tests
      run: ./scripts/ci_runtests.sh
    - name: Upload coverage to Codecov
      if: success()
      run: codecov

  deploy:
    if: github.event_name == 'push' && github.ref_type == 'tag' && matrix.env.DEPLOY == 'true'
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install pip -U
        pip install wheel
        pip install twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  sauce_connect:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Sauce Connect
      uses: saucelabs/sauce-connect-action@v1
      with:
        username: ${{ secrets.SAUCE_USERNAME }}
        accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
