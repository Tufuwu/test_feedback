name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
        include:
          - python-version: "3.8"
            env: TOXENV=coverage,mypy,style,docs,dist-test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install ".[build]"
        pip install tox
    - name: Run tests
      run: tox
    - name: Run coveralls
      if: matrix.env.TOXENV == 'coverage,mypy,style,docs,dist-test'
      run: coveralls

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: pip install ".[build]"
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ] && [ "${{ github.event.head_commit.message }}" == *"[release]"* ]; then
          twine upload dist/*
        elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*
        fi
